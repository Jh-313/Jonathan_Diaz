// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Melodix.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250718193715_v01")]
    partial class v01
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Melodix.Anuncio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("SegundosParaOmitir")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UrlAudio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlImagen")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Anuncios");
                });

            modelBuilder.Entity("Melodix.Cancion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaSubida")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("SubidoPorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalLikes")
                        .HasColumnType("int");

                    b.Property<int>("TotalReproducciones")
                        .HasColumnType("int");

                    b.Property<string>("UrlAudio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlImagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SubidoPorId");

                    b.ToTable("Canciones");
                });

            modelBuilder.Entity("Melodix.Like", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CancionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CancionId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Likes");
                });

            modelBuilder.Entity("Melodix.ListaCancion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CancionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FechaAgregado")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ListaReproduccionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CancionId");

                    b.HasIndex("ListaReproduccionId");

                    b.ToTable("ListaCanciones");
                });

            modelBuilder.Entity("Melodix.ListaReproduccion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ListaReproducciones");
                });

            modelBuilder.Entity("Melodix.Reproduccion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CancionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CancionId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Reproducciones");
                });

            modelBuilder.Entity("Melodix.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContrasenaHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rol")
                        .HasColumnType("int");

                    b.Property<int?>("Suscripcion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Melodix.Cancion", b =>
                {
                    b.HasOne("Melodix.Usuario", "SubidoPor")
                        .WithMany("CancionesSubidas")
                        .HasForeignKey("SubidoPorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubidoPor");
                });

            modelBuilder.Entity("Melodix.Like", b =>
                {
                    b.HasOne("Melodix.Cancion", "Cancion")
                        .WithMany("Likes")
                        .HasForeignKey("CancionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Melodix.Usuario", "Usuario")
                        .WithMany("Likes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cancion");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Melodix.ListaCancion", b =>
                {
                    b.HasOne("Melodix.Cancion", "Cancion")
                        .WithMany("ListasCancion")
                        .HasForeignKey("CancionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Melodix.ListaReproduccion", "ListaReproduccion")
                        .WithMany("ListasCancion")
                        .HasForeignKey("ListaReproduccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cancion");

                    b.Navigation("ListaReproduccion");
                });

            modelBuilder.Entity("Melodix.ListaReproduccion", b =>
                {
                    b.HasOne("Melodix.Usuario", "Usuario")
                        .WithMany("Listas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Melodix.Reproduccion", b =>
                {
                    b.HasOne("Melodix.Cancion", "Cancion")
                        .WithMany("Reproducciones")
                        .HasForeignKey("CancionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Melodix.Usuario", "Usuario")
                        .WithMany("Reproducciones")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cancion");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Melodix.Cancion", b =>
                {
                    b.Navigation("Likes");

                    b.Navigation("ListasCancion");

                    b.Navigation("Reproducciones");
                });

            modelBuilder.Entity("Melodix.ListaReproduccion", b =>
                {
                    b.Navigation("ListasCancion");
                });

            modelBuilder.Entity("Melodix.Usuario", b =>
                {
                    b.Navigation("CancionesSubidas");

                    b.Navigation("Likes");

                    b.Navigation("Listas");

                    b.Navigation("Reproducciones");
                });
#pragma warning restore 612, 618
        }
    }
}
